<ResourceDictionary
    x:Class="ENG.ParameterScanner.Revit.Addin.Views.Resources"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
>
    <!-- Colors -->
    <SolidColorBrush x:Key="WindowBackColor" Color="White"/>
    <SolidColorBrush x:Key="WindowMainColor" Color="#0B94D6"/>
    <SolidColorBrush x:Key="WindowGrayColor" Color="#AAAAAA"/>
    <SolidColorBrush x:Key="WindowTextColor" Color="#555555"/>
    <SolidColorBrush x:Key="WindowBorderColor" Color="#AAAAAA"/>
    <SolidColorBrush x:Key="WindowDarkerBorderColor" Color="#555555"/>
    <SolidColorBrush x:Key="WindowErrorColor" Color="#D6000B"/>
    <SolidColorBrush x:Key="WindowWarningColor" Color="#D6940B"/>
    <SolidColorBrush x:Key="WindowSecondaryColor" Color="Gray"/>
 
    <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
        <Grid Background="Transparent">
            <Border
                Margin="10"
                Padding="15"
                Style="{DynamicResource ENG_WindowBorderStyle}"
            >
                <ContentPresenter x:Name="WindowContent"/>
            </Border>
        </Grid>
    </ControlTemplate>

    <Style x:Key="ENG_WindowStyle" TargetType="{x:Type Window}">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="{StaticResource WindowBackColor}"/>
        <Setter Property="BorderBrush" Value="{StaticResource WindowGrayColor}"/>
        <Setter Property="Foreground" Value="{StaticResource WindowMainColor}"/>
        <Setter Property="Template" Value="{StaticResource WindowTemplate}"/>

    </Style>

    <Style x:Key="ENG_WindowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="7"/>
        <Setter Property="BorderBrush" Value="{StaticResource WindowGrayColor}"/>
        <Setter Property="Background" Value="{StaticResource WindowBackColor}"/>
        <Setter Property="Border.Effect">
            <Setter.Value>
                <DropShadowEffect 
                    Color="Gray" 
                    Direction="5"
                    ShadowDepth="0" 
                    BlurRadius="10" 
                    Opacity="0.2"
                />
            </Setter.Value>
        </Setter>

    </Style>

    <Style x:Key="ENG_TitleStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource WindowMainColor}"/>
    </Style>
    
    <Style x:Key="ENG_VersionStyle" TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontWeight" Value="Regular"/>
        <Setter Property="Foreground" Value="{StaticResource WindowTextColor}"/>
    </Style>

    <Style x:Key="ENG_ActionButtons" TargetType="{x:Type Label}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Padding" Value="0"/>
    </Style>

    <ControlTemplate TargetType="{x:Type Button}" x:Key="ButtonTemplate">
        <Border Background="{TemplateBinding Background}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="ENG_LogoButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Width" Value="32"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
    </Style>

    <Style x:Key="ENG_ActionButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="Height" Value="12"/>
        <Setter Property="Width" Value="12"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}"/>
    </Style>

    <Style x:Key="ENG_ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="14px"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="{StaticResource WindowMainColor}"/>
        <Setter Property="ToolTipService.ShowDuration"  Value="2000"/>
        <Setter Property="ToolTipService.InitialShowDelay" Value="1500"/>
        <Setter Property="Height"  Value="30"/>
        <Setter Property="Padding" Value="15 0"/>
        <Setter Property="MinWidth" Value="130"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Button.Effect">
            <Setter.Value>
                <DropShadowEffect 
                    Color="Gray" 
                    Direction="320"
                    ShadowDepth="3" 
                    BlurRadius="10" 
                    Opacity="0.3"
                />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        x:Name="border" 
                        CornerRadius="5" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True"
                    >
                        <ContentPresenter 
                            x:Name="contentPresenter" 
                            ContentTemplate="{TemplateBinding ContentTemplate}" 
                            Content="{TemplateBinding Content}" 
                            ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefaulted" Value="True">
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Opacity"  TargetName="border" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Opacity"  TargetName="border" Value="0.2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ENG_TextBox" TargetType="TextBox">

        <Setter Property="Background" Value="{StaticResource WindowBackColor}"/>
        <Setter Property="Foreground" Value="{StaticResource WindowTextColor}"/>

        <Setter Property="BorderBrush" Value="{StaticResource WindowBorderColor }"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Regular"/>

        <Setter Property="Padding" Value="10"/>
        <Setter Property="Height" Value="40"/>

        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>

        <Setter Property="Cursor" Value="IBeam"/>
        <Setter Property="TextWrapping" Value="Wrap"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid x:Name="root" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
                        <Border
                            x:Name="normalBorder" 
                            Background="White"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="5"
                        />
                        <Label
                            x:Name="textLabel"
                            Visibility="Hidden"
                            Margin="9 7 0 0"
                            Foreground="{TemplateBinding Foreground}"
                                   Content="{TemplateBinding Tag}"
                        />

                        <ScrollViewer x:Name="PART_ContentHost"
                          Padding="{TemplateBinding Padding}"
                          BorderThickness="0" 
                          IsTabStop="False" 
                          Margin="2" 
                          Background="{x:Null}"
                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          TextElement.Foreground="{TemplateBinding Foreground}"/>
                        
                        

                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Text" Value=""/>
                                <Condition Property="IsFocused" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{StaticResource WindowGrayColor}"/>

                            <Setter
                                TargetName="textLabel"
                                Property="Visibility"
                                Value="Visible"
                            />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ENG_Label" TargetType="Label">

        <Setter Property="Background" Value="{StaticResource WindowBackColor}"/>
        <Setter Property="Foreground" Value="{StaticResource WindowTextColor}"/>
        
        <Setter Property="BorderBrush" Value="{StaticResource WindowBorderColor }"/>
        <Setter Property="BorderThickness" Value="1"/>

        <Setter Property="FontFamily" Value="Roboto"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="Medium"/>

        <Setter Property="Padding" Value="10"/>

        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>

        <Setter Property="Cursor" Value="IBeam"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border
                        x:Name="normalBorder" 
                        Background="White"
                        CornerRadius="5"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                    >
                        <TextBlock Text="{TemplateBinding Content}" Visibility="Visible" Margin="12" TextWrapping="Wrap"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="ERROR">
                            <Setter Property="BorderBrush" Value="{StaticResource WindowErrorColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource WindowErrorColor}"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="INFO">
                            <Setter Property="BorderBrush" Value="{StaticResource WindowMainColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource WindowMainColor}"/>
                        </Trigger>
                        <Trigger Property="Tag" Value="WARNING">
                            <Setter Property="BorderBrush" Value="{StaticResource WindowWarningColor}"/>
                            <Setter Property="Foreground" Value="{StaticResource WindowWarningColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>